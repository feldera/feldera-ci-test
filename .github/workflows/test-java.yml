name: Test Java Sources

on:
  workflow_call:

env:
  # The cache doesn't help here because the tests always run under temp/src/lib.rs
  # and the cache key is based file path, hence it gets overridden for every new test
  # You'll also need to disable the incremental build in temp/Cargo.toml
  RUSTC_WRAPPER: sccache
  SCCACHE_DIR: /sccache
  SCCACHE_CACHE_SIZE: 1024G

jobs:
  java-tests:
    name: Execute Java Tests
    runs-on: [self-hosted, skylake40, sccache]
    container:
      image: ghcr.io/feldera/feldera-dev:a9b1688f32cbdf0c33c1dbccc79c3934917d98e0
      options: --user=ubuntu
      volumes:
        - /sccache:/sccache

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      # The docker container when executed in the action runs with a different home directory
      # than we set in the dev container (?), hence this step is necessary (sigh)
      # https://github.com/actions/runner/issues/863
      - name: Rustup set default toolchain
        run: rustup default stable

      - name: Cache Maven dependencies
        uses: actions/cache@v4
        with:
          path: ~/.m2/repository
          key: maven-${{ runner.os }}-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            maven-${{ runner.os }}-

      # TODO: Avoid doing this twice and ideally download & reuse the JAR from build-java.yml workflow
      - name: Run build.sh
        run: ./build.sh
        working-directory: ./sql-to-dbsp-compiler

      - name: Run mvn test
        run: mvn test --no-transfer-progress -q -B -pl SQL-compiler -Dsurefire.failIfNoSpecifiedTests=false
        working-directory: ./sql-to-dbsp-compiler

      - name: Print sccache stats
        run: |
          sccache --show-stats
